@model DIENMAYQUYETTIEN2.Models.InstallmentBill

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Admin_Layout.cshtml";
}


    <h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
       
            <div style="height: 20px;"></div>
            <div class="form-horizontal">
                @Html.ValidationSummary(true)


                <div class="form-group">
                    @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CustomerID", (IEnumerable<SelectListItem>)ViewData["CustomerID"], htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CustomerID)
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Shipper, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Shipper, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Shipper)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Note, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Note)
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Period, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Period, new { htmlAttributes = new { @class = "form-control", id = "address" } })
                        @Html.ValidationMessageFor(model => model.Period)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Method, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Method, new { htmlAttributes = new { @class = "form-control", id = "phone" } })
                        @Html.ValidationMessageFor(model => model.Method)
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create Information" class="btn btn-success" />
                        
                    </div>
                </div>
            </div>
        
            }

            @if (Session["IBill"] != null)
            {

                @Html.Action("Create", "InstallmentBillDetailAdmin")

                @Html.Action("Index", "InstallmentBillDetailAdmin")

                <br /><br />
                using (Html.BeginForm("Create2", "InstallmentBillAdmin"))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Lập hóa đơn" class="btn btn-success" />
                        </div>
                    </div>
                }
            }

<script>
        function getInstallmentPrice(ProductID) {
            var url = '@Url.Action("InstallmentPrice", "InstallmentBillDetailAdmin")';
            url = url + '?ProductID=' + ProductID
            $.get(url, function (data) {
                $('#InstallmentPrice').val(data);
            });
        }
        $(document).ready(function () {
            var ProductID = $("#ProductID").children("option:selected").val();
            getInstallmentPrice(ProductID);
        });
        $('#ProductID').change(function () {
            getInstallmentPrice($(this).val());
        });

        $('#taken').change(function () {
            var taken = $('#taken').val();

            var url = '@Url.Action("setSessionTaken", "InstallmentBillAdmin")';
            url = url + '?taken=' + taken
            $.get(url, function (data) {
                $('#remain').val(@Session["total"] - data);
            });
        })
</script>
